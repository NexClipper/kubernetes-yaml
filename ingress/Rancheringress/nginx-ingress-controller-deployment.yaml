apiVersion: v1
kind: Pod
metadata:
  labels:
    app: nginx-ingress
    component: controller
    pod-template-hash: 75b8c69977
    release: nginx-ingress
  namespace: nginx-ingress
  ownerReferences:
  - apiVersion: apps/v1
    blockOwnerDeletion: true
    controller: true
    kind: ReplicaSet
    name: nginx-ingress-controller-75b8c69977
    uid: 914a456c-11e3-11e9-a373-525400b2311c
  resourceVersion: "4672683"
  selfLink: /api/v1/namespaces/nginx-ingress/pods/nginx-ingress-controller-75b8c69977-8ffbq
  uid: 9156e136-11e3-11e9-a373-525400b2311c
spec:
  containers:
  - args:
    - /nginx-ingress-controller
    - --default-backend-service=nginx-ingress/nginx-ingress-default-backend
    - --election-id=ingress-controller-leader
    - --ingress-class=nginx
    - --configmap=nginx-ingress/nginx-ingress-controller
    env:
    - name: POD_NAME
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.name
    - name: POD_NAMESPACE
      valueFrom:
        fieldRef:
          apiVersion: v1
          fieldPath: metadata.namespace
    image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.21.0
    imagePullPolicy: IfNotPresent
    livenessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    name: nginx-ingress-controller
    ports:
    - containerPort: 80
      name: http
      protocol: TCP
    - containerPort: 443
      name: https
      protocol: TCP
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: /healthz
        port: 10254
        scheme: HTTP
      initialDelaySeconds: 10
      periodSeconds: 10
      successThreshold: 1
      timeoutSeconds: 1
    resources: {}
    securityContext:
      capabilities:
        add:
        - NET_BIND_SERVICE
        drop:
        - ALL
      procMount: Default
      runAsUser: 33
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: nginx-ingress-token-s7wqt
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: kubenode3
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: nginx-ingress
  serviceAccountName: nginx-ingress
  terminationGracePeriodSeconds: 60
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: nginx-ingress-token-s7wqt
    secret:
      defaultMode: 420
      secretName: nginx-ingress-token-s7wqt
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2019-01-06T18:47:50Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2019-01-06T18:48:16Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2019-01-06T18:48:16Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2019-01-06T18:47:50Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://80a7c82ad24621afef6d1136bf9e52741962cd66241c9000bc6defafe9af5106
    image: quay.io/kubernetes-ingress-controller/nginx-ingress-controller:0.21.0
    imageID: docker-pullable://quay.io/kubernetes-ingress-controller/nginx-ingress-controller@sha256:617076c3e3d4d0638a4927702530d8456bda64c67194f6daed272a59e93b992f
    lastState: {}
    name: nginx-ingress-controller
    ready: true
    restartCount: 0
    state:
      running:
        startedAt: "2019-01-06T18:47:53Z"
  hostIP: 192.168.0.174
  phase: Running
  podIP: 10.244.3.121
  qosClass: BestEffort
  startTime: "2019-01-06T18:47:50Z"

